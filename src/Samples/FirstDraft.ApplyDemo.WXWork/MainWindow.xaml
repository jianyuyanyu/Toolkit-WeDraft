<fd:FdWindow x:Class="FirstDraft.ApplyDemo.WXWork.MainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:FirstDraft.ApplyDemo.WXWork"
             xmlns:fdcontrols="clr-namespace:FirstDraft.Controls;assembly=FirstDraft"
             xmlns:fd="clr-namespace:FirstDraft;assembly=FirstDraft"
             DataContext="{Binding MainWindowModel, Source={StaticResource Locator}}"
             mc:Ignorable="d"
             Title="MainWindow" Height="675" Width="1200">
    <fd:FdWindow.Resources>

        <Style x:Key="UserIconToggleButton" TargetType="{x:Type fdcontrols:IconToggleButton}" >
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}"/>
            <Setter Property="HorizontalContentAlignment"  Value="Center"/>
            <Setter Property="VerticalContentAlignment"  Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="IconSize" Value="{DynamicResource DefalutIconSize}"/>
            <Setter Property="FontSize" Value="{DynamicResource DefalutFontSize}"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type fdcontrols:IconToggleButton}">
                        <Border Name="border" Height="40" Width="40" Margin="0 10"
                                        Background="{DynamicResource Accent}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}" CornerRadius="40"
                                        SnapsToDevicePixels="true">

                            <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center">


                                <Path x:Name="icon" DockPanel.Dock="Left"
                                    Width="18" Height="18"
                                      Data="{TemplateBinding Icon}" 
                                      Fill="{TemplateBinding Foreground}"
                                      Stretch="Uniform"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center">
                                </Path>

                                <ContentPresenter x:Name="contentPresenter" Margin="5 0 0 0" Visibility="Collapsed"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            </DockPanel>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="True">
                                <Setter Property="Visibility" TargetName="contentPresenter" Value="Visible"/>
                            </Trigger>
                            <!--<Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Checked.Background}"/>
                                <Setter Property="BorderBrush"  TargetName="border" Value="{DynamicResource Button.Checked.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource Button.Checked.Foreground}"/>
                                <Setter Property="Fill"  TargetName="icon" Value="{DynamicResource Button.Checked.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush"  TargetName="border" Value="{DynamicResource Button.MouseOver.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource Button.MouseOver.Foreground}"/>
                                <Setter Property="Fill" TargetName="icon" Value="{DynamicResource Button.MouseOver.Foreground}"/>
                                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.MouseOver.Foreground}"/>
                            </Trigger>-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush"  TargetName="border" Value="{DynamicResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background"  Value="{DynamicResource Button.Disabled.Background}"/>
                                <Setter Property="Background"   TargetName="border" Value="{DynamicResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush"  TargetName="border" Value="{DynamicResource Button.Disabled.Border}"/>
                                <Setter Property="Fill"  TargetName="icon" Value="{DynamicResource Button.Disabled.Foreground}"/>
                                <Setter Property="Foreground"  Value="{DynamicResource Button.Disabled.Foreground}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="WxWorkNaviIconRaioButton" TargetType="{x:Type fdcontrols:IconRadioButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="IconSize" Value="20"/>
            <Setter Property="FontSize" Value="{DynamicResource DefalutFontSize}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type fdcontrols:IconRadioButton}">
                        <Grid x:Name="root" >
                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="5"
                                    SnapsToDevicePixels="true">
                            </Border>

                            <Border  Margin="0 0 0 0">
                                <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}">
                                    <Path Data="{TemplateBinding Icon}" Margin="0 0 0 0"
                                      DockPanel.Dock="Top"
                                          Width="{TemplateBinding IconSize}" Height="{TemplateBinding IconSize}"
                                          x:Name="path" Fill="{TemplateBinding Foreground}"
                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Stretch="Uniform">
                                    </Path>

                                    <ContentPresenter x:Name="contentPresenter" DockPanel.Dock="Top"
                                          Focusable="False" Margin="0 3 0 0" Visibility="Visible"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Border>

                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="False">
                                <Setter Property="Visibility" TargetName="contentPresenter" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource IconRadioButton.Checked.Background}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource IconRadioButton.Checked.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Pressed.Background}"/>
                                <Setter Property="Effect" TargetName="path" Value="{DynamicResource DeepPathEffect}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Static.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.Background}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Disabled.Foreground}"/>
                                <Setter Property="Fill" TargetName="path" Value="{DynamicResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="WxWorkNaviIconToggleButton" TargetType="{x:Type fdcontrols:IconToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="IconSize" Value="20"/>
            <Setter Property="FontSize" Value="{DynamicResource DefalutFontSize}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type fdcontrols:IconToggleButton}">
                        <Grid x:Name="root" >
                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Height="{TemplateBinding Width}"
                                    CornerRadius="5"
                                    SnapsToDevicePixels="true">
                            </Border>

                            <Border  Margin="0 0 0 0">
                                <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}">
                                    <Path Data="{TemplateBinding Icon}" Margin="0 0 0 0"
                                      DockPanel.Dock="Top"
                                          Width="{TemplateBinding IconSize}" Height="{TemplateBinding IconSize}"
                                          x:Name="path" Fill="{TemplateBinding Foreground}"
                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Stretch="Uniform">
                                    </Path>

                                    <ContentPresenter x:Name="contentPresenter" DockPanel.Dock="Top"
                                          Focusable="False" Margin="0 3 0 0" Visibility="Visible"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Border>

                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="False">
                                <Setter Property="Visibility" TargetName="contentPresenter" Value="Collapsed"/>
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource IconRadioButton.Checked.Background}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource IconRadioButton.Checked.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Pressed.Background}"/>
                                <Setter Property="Effect" TargetName="path" Value="{DynamicResource DeepPathEffect}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Static.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.Background}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Disabled.Foreground}"/>
                                <Setter Property="Fill" TargetName="path" Value="{DynamicResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="ForeLeftNaviIconRaioButton" TargetType="{x:Type fdcontrols:IconRadioButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="0 10 10 10"/>
            <Setter Property="IconSize" Value="{DynamicResource DefalutIconSize}"/>
            <Setter Property="FontSize" Value="{DynamicResource DefalutFontSize}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type fdcontrols:IconRadioButton}">
                        <Grid x:Name="root" >
                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="true">
                            </Border>


                            <Rectangle x:Name="rect" Visibility="Hidden" Fill="{DynamicResource Accent}" Height="12" Width="4" 
                                   HorizontalAlignment="Left" VerticalAlignment="Center"/>

                            <Border  Margin="0 0 0 0">
                                <DockPanel VerticalAlignment="Center" Margin="{TemplateBinding Padding}">
                                    <Path Data="{TemplateBinding Icon}" Margin="12 0"
                                      DockPanel.Dock="Left"
                                          Width="{TemplateBinding IconSize}" Height="{TemplateBinding IconSize}"
                                          x:Name="path" Fill="{TemplateBinding Foreground}"
                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Stretch="Uniform">
                                    </Path>

                                    <ContentPresenter x:Name="contentPresenter" DockPanel.Dock="Right"
                                          Focusable="False"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Border>

                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource IconRadioButton.Checked.Background}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility" Value="Visible" TargetName="rect"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Accent}"/>
                                <Setter Property="Fill" TargetName="path" Value="{DynamicResource Accent}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Pressed.Background}"/>
                                <Setter Property="Effect" TargetName="path" Value="{DynamicResource DeepPathEffect}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Static.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.Background}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Disabled.Foreground}"/>
                                <Setter Property="Fill" TargetName="rect" Value="{DynamicResource Button.Disabled.Foreground}"/>
                                <Setter Property="Fill" TargetName="path" Value="{DynamicResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="WxWorkMenuIconRaioButton" TargetType="{x:Type fdcontrols:IconButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="IconSize" Value="{DynamicResource DefalutIconSize}"/>
            <Setter Property="FontSize" Value="{DynamicResource DefalutFontSize}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type fdcontrols:IconButton}">
                        <Grid x:Name="root" >
                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="5"
                                    SnapsToDevicePixels="true">
                            </Border>

                            <Border  Margin="0 0 0 0">
                                <DockPanel VerticalAlignment="Center" Margin="{TemplateBinding Padding}">
                                    <Path Data="{TemplateBinding Icon}" Margin="12 0"
                                      DockPanel.Dock="Left"
                                          Width="{TemplateBinding IconSize}" Height="{TemplateBinding IconSize}"
                                          x:Name="path" Fill="{TemplateBinding Foreground}"
                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Stretch="Uniform">
                                    </Path>

                                    <ContentPresenter x:Name="contentPresenter" DockPanel.Dock="Right"
                                          Focusable="False"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Border>

                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource IconRadioButton.Checked.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Pressed.Background}"/>
                                <Setter Property="Effect" TargetName="path" Value="{DynamicResource DeepPathEffect}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Static.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.Background}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Disabled.Foreground}"/>
                                <Setter Property="Fill" TargetName="path" Value="{DynamicResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <Style x:Key="WxWorkMenuToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="FontSize" Value="{DynamicResource DefalutFontSize}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid x:Name="root" >
                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Height="{TemplateBinding Width}"
                                    CornerRadius="5"
                                    SnapsToDevicePixels="true">
                            </Border>

                            <Border  Margin="0 0 0 0" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="contentPresenter" DockPanel.Dock="Top"
                                          Focusable="False" Visibility="Visible"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>

                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource IconRadioButton.Checked.Background}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource IconRadioButton.Checked.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Pressed.Background}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Static.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.Background}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <Style x:Key="WxWorkMenuButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="10 10 10 10"/>
            <Setter Property="FontSize" Value="{DynamicResource DefalutFontSize}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="root" >
                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="5"
                                    SnapsToDevicePixels="true">
                            </Border>

                            <Border  Margin="0 0 0 0">
                                <DockPanel VerticalAlignment="Center" Margin="{TemplateBinding Padding}">

                                    <ContentPresenter x:Name="contentPresenter" DockPanel.Dock="Right"
                                          Focusable="False"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Border>

                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource IconRadioButton.Checked.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Pressed.Background}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Static.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.Background}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </fd:FdWindow.Resources>
    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <DockPanel Background="{DynamicResource Accent}">

            <Grid DockPanel.Dock="Top" Margin="0 18 0 10 ">
                <Rectangle Width="40" Height="40" Fill="{DynamicResource DefaultBackground}" />
                <fdcontrols:IconToggleButton WindowChrome.IsHitTestVisibleInChrome="True"  DockPanel.Dock="Top" Margin="6 0"
                                         x:Name="PART_USER" Style="{StaticResource WxWorkNaviIconToggleButton}"
                                             Foreground="Purple"
                                         Icon="{Binding user_fill, Source={StaticResource IconSet}}"/>
            </Grid>
            <Popup AllowsTransparency="True"
                   PlacementTarget="{Binding ElementName=PART_USER}"
                   IsOpen="{Binding IsChecked, ElementName=PART_USER}"
                   StaysOpen="False"
                   PopupAnimation="Slide" VerticalOffset="-18"
                   Placement="Right"  >
                <Grid Width="280">
                    <DockPanel Margin="0 0 5 5">
                        <DockPanel.Effect>
                            <DropShadowEffect BlurRadius="5" Color="Black" Opacity="0.51" ShadowDepth="0" Direction="0"/>
                        </DockPanel.Effect>

                        <Border Padding="8" Background="{DynamicResource DefaultBackground}" BorderThickness="1 0 1 1" CornerRadius="0 5 5 5" 
                                >
                            <DockPanel>
                                <ToggleButton x:Name="PART_USERDETAILS" Style="{DynamicResource WxWorkMenuToggleButton}" DockPanel.Dock="Top" HorizontalContentAlignment="Left">
                                    <DockPanel HorizontalAlignment="Left">
                                        <Rectangle DockPanel.Dock="Left" HorizontalAlignment="Left" Width="48" Height="48" Fill="{DynamicResource ExAccent}" />
                                        <StackPanel VerticalAlignment="Center" Margin="10 0 0 0">
                                            <Label Content="一阵没来由的风" FontWeight="Black"/>
                                            <Label Content="乱七八糟科技（重庆）" />
                                        </StackPanel>
                                    </DockPanel>
                                </ToggleButton>

                                <Popup AllowsTransparency="True"
                                       PlacementTarget="{Binding ElementName=PART_USERDETAILS}"
                                       IsOpen="{Binding IsChecked, ElementName=PART_USERDETAILS}"
                                       StaysOpen="False" 
                                       PopupAnimation="Fade" VerticalOffset="-8"
                                       Placement="Right"  >
                                    <Grid Width="280">
                                        <DockPanel Margin="0 0 5 5">
                                            <DockPanel.Effect>
                                                <DropShadowEffect BlurRadius="5" Color="Black" Opacity="0.51" ShadowDepth="0" Direction="0"/>
                                            </DockPanel.Effect>

                                            <Border Padding="8" Background="{DynamicResource DefaultBackground}" BorderThickness="1 0 1 1" CornerRadius="0 5 5 5" 
                                >
                                                <DockPanel>
                                                    <DockPanel  DockPanel.Dock="Top" HorizontalAlignment="Left" Margin="5 10">
                                                        <Rectangle DockPanel.Dock="Left" HorizontalAlignment="Left" Width="64" Height="64" Fill="{DynamicResource ExAccent}" />
                                                        <StackPanel VerticalAlignment="Center" Margin="10 0 0 0">
                                                            <Label Content="一阵没来由的风" FontWeight="Black"/>
                                                            <Label Content="软件开发工程师" />
                                                        </StackPanel>
                                                    </DockPanel>

                                                    <Rectangle Height="0.2" Margin="0 5" Fill="{DynamicResource DefaultForeground}" HorizontalAlignment="Stretch" DockPanel.Dock="Top"/>

                                                    <Button DockPanel.Dock="Top" Style="{DynamicResource WxWorkMenuButton}" Margin="0 0 0 0">
                                                        <TextBlock >
                                                            <Run Text="(˘ω˘)✩" FontWeight="Black"/>
                                                            <Run Text="当一阵风，欢乐奔放，心向远方"/>
                                                        </TextBlock>
                                                    </Button>

                                                    <fdcontrols:IconButton DockPanel.Dock="Top" Style="{DynamicResource WxWorkMenuIconRaioButton}" Content="查看日程"  Icon="{Binding checkbox_line, Source={StaticResource IconSet}}"/>

                                                    <Rectangle Height="0.2" Margin="0 5" Fill="{DynamicResource DefaultForeground}" HorizontalAlignment="Stretch" DockPanel.Dock="Top"/>

                                                    <StackPanel  DockPanel.Dock="Top">

                                                        <StackPanel Orientation="Horizontal" Margin="5" >
                                                            <TextBlock Margin="10 0"  Text="手机"/>
                                                            <Button Margin="10 0" Style="{DynamicResource NoBackgroundButton}" Content="18199998888"/>
                                                        </StackPanel>

                                                        <StackPanel Orientation="Horizontal" Margin="5" >
                                                            <TextBlock Margin="10 0"  Text="座机"/>
                                                            <Button Margin="10 0" Style="{DynamicResource NoBackgroundButton}" Content="18199998888"/>
                                                        </StackPanel>

                                                        <StackPanel Orientation="Horizontal" Margin="5" >
                                                            <TextBlock Margin="10 0"  Text="邮箱"/>
                                                            <Button Margin="10 0" Style="{DynamicResource NoBackgroundButton}" Content="mefdeamon@163.com"/>
                                                        </StackPanel>

                                                        <StackPanel Orientation="Horizontal" Margin="5" >
                                                            <TextBlock Margin="10 0"  Text="部门"/>
                                                            <Button Margin="10 0" Style="{DynamicResource NoBackgroundButton}" Content="第一事业部/软件组"/>
                                                        </StackPanel>

                                                    </StackPanel>

                                                    <StackPanel  DockPanel.Dock="Top" Margin="10">

                                                        <Button Content="发送消息" />
                                                    </StackPanel>

                                                </DockPanel>

                                            </Border>
                                        </DockPanel>
                                    </Grid>
                                </Popup>



                                <Button DockPanel.Dock="Top" Style="{DynamicResource WxWorkMenuButton}" Margin="0 0 0 16">
                                    <TextBlock >
                                        <Run Text="(˘ω˘)✩" FontWeight="Black"/>
                                        <Run Text="当一阵风，欢乐奔放，心向远方"/>
                                    </TextBlock>
                                </Button>


                                <Rectangle Height="0.2" Margin="-8 5" Fill="{DynamicResource DefaultForeground}" HorizontalAlignment="Stretch" DockPanel.Dock="Top"/>

                                <StackPanel  DockPanel.Dock="Top">

                                    <fdcontrols:IconButton Style="{DynamicResource WxWorkMenuIconRaioButton}" Content="休息一下"  Icon="{Binding in_dark, Source={StaticResource IconSet}}"/>
                                    <fdcontrols:IconButton Style="{DynamicResource WxWorkMenuIconRaioButton}" Content="收藏" Icon="{Binding cube_line, Source={StaticResource IconSet}}"/>
                                    <fdcontrols:IconButton Style="{DynamicResource WxWorkMenuIconRaioButton}" Content="消息管理器" Icon="{Binding checkbox_line, Source={StaticResource IconSet}}"/>

                                </StackPanel>
                                <Rectangle Height="0.2" Margin="-8 5" Fill="{DynamicResource DefaultForeground}" HorizontalAlignment="Stretch" DockPanel.Dock="Top"/>

                                <StackPanel  DockPanel.Dock="Top">

                                    <fdcontrols:IconButton Style="{DynamicResource WxWorkMenuIconRaioButton}" Content="邀请同事加入" />
                                </StackPanel>
                                <Rectangle Height="0.2" Margin="-8 5" Fill="{DynamicResource DefaultForeground}" HorizontalAlignment="Stretch" DockPanel.Dock="Top"/>

                                <StackPanel  DockPanel.Dock="Top">
                                    <fdcontrols:IconButton Style="{DynamicResource WxWorkMenuIconRaioButton}" Content="帮助中心" />
                                    <fdcontrols:IconButton Style="{DynamicResource WxWorkMenuIconRaioButton}" Content="吐个槽" />
                                    <fdcontrols:IconButton Style="{DynamicResource WxWorkMenuIconRaioButton}" Content="成为开发者" Icon="{Binding cube_line, Source={StaticResource IconSet}}"/>
                                    <fdcontrols:IconButton Style="{DynamicResource WxWorkMenuIconRaioButton}" Content="设置"/>
                                </StackPanel>

                            </DockPanel>

                        </Border>
                    </DockPanel>
                </Grid>
            </Popup>



            <fdcontrols:IconToggleButton Margin="6 3" Padding="6 14" DockPanel.Dock="Bottom"
                                            Style="{StaticResource WxWorkNaviIconToggleButton}"
                                         x:Name="PART_ENTERPRISE"
                                            Icon="{Binding Source={StaticResource IconSet}, Path=integral_fill}">
            </fdcontrols:IconToggleButton>
            <Popup AllowsTransparency="True"
                   PlacementTarget="{Binding ElementName=PART_ENTERPRISE}"
                   IsOpen="{Binding IsChecked, ElementName=PART_ENTERPRISE}"
                   StaysOpen="False" VerticalOffset="-40"
                   PopupAnimation="Scroll"
                   Placement="Right"  >
                <Grid >
                    <DockPanel Margin="2 5 5 5">

                        <Border Padding="8"  BorderThickness="0.5" BorderBrush="{DynamicResource DefaultForeground}" CornerRadius="5 5 5 5" 
                            >

                            <Border.Background>
                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                    <GradientStop Color="{DynamicResource DefaultBackgrounColor}" Offset="0"/>
                                    <GradientStop Color="{DynamicResource DefaultBackgrounColor}" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>



                            <StackPanel>
                                <fdcontrols:IconRadioButton IsChecked="True" Style="{DynamicResource ForeLeftNaviIconRaioButton}"  Icon="{Binding Source={StaticResource IconSet}, Path=integral_fill}" Content="腾讯科技-研发部"/>
                                <fdcontrols:IconRadioButton Style="{DynamicResource ForeLeftNaviIconRaioButton}" Icon="{Binding Source={StaticResource IconSet}, Path=integral_fill}" Content="阿里巴巴-研发部"/>
                            </StackPanel>

                        </Border>
                    </DockPanel>
                </Grid>
            </Popup>



            <ListBox  DockPanel.Dock="Top" Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Top" 
                      DataContext="{Binding MainWindowModel, Source={StaticResource Locator}}" ItemsSource="{Binding Items}" SelectedItem="{Binding Current}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type local:NaviItem}">

                        <fdcontrols:IconRadioButton Content="{Binding Title}" Margin="6 3 6 3" Padding="6"
                                            Style="{StaticResource WxWorkNaviIconRaioButton}"
                                            GroupName="Items" 
                                            Icon="{Binding Icon}">
                            <fdcontrols:IconRadioButton.IsChecked>
                                <Binding Path="IsSelected"
                                             RelativeSource="{RelativeSource AncestorType=ListBoxItem}"
                                             Mode="TwoWay" />
                            </fdcontrols:IconRadioButton.IsChecked>
                        </fdcontrols:IconRadioButton>

                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>


            <fdcontrols:IconToggleButton Margin="6 3 6 3" Padding="6" DockPanel.Dock="Top"
                                            Style="{StaticResource WxWorkNaviIconToggleButton}"
                                         x:Name="PART_MORE" Content="更多"
                                            Icon="{Binding Source={StaticResource IconSet}, Path=welcome}">
            </fdcontrols:IconToggleButton>

            <Popup AllowsTransparency="True"
                   PlacementTarget="{Binding ElementName=PART_MORE}"
                   IsOpen="{Binding IsChecked, ElementName=PART_MORE}"
                   StaysOpen="False" VerticalOffset="-40"
                   PopupAnimation="Fade"
                   Placement="Right"  >
                <Grid >
                    <DockPanel Margin="2 5 5 5">

                        <Border Padding="8"  BorderThickness="0.5" BorderBrush="{DynamicResource DefaultForeground}" Background="{DynamicResource Accent}" CornerRadius="5 5 5 5" 
                                >

                            <StackPanel>
                                <fdcontrols:IconButton Style="{DynamicResource WxWorkMenuIconRaioButton}"  Icon="{Binding Source={StaticResource IconSet}, Path=integral_fill}" Content="微盘"/>
                                <fdcontrols:IconButton Style="{DynamicResource WxWorkMenuIconRaioButton}" Icon="{Binding Source={StaticResource IconSet}, Path=all_fill}" Content="高级功能"/>
                            </StackPanel>

                        </Border>
                    </DockPanel>
                </Grid>
            </Popup>
        </DockPanel>

        <Frame Grid.Row="1" Grid.Column="1" FocusVisualStyle="{x:Null}" NavigationUIVisibility="Hidden" DataContext="{Binding Current}" Content="{Binding Content}"/>
    </Grid>
</fd:FdWindow>

