<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:FirstDraft.Controls">

    <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="{DynamicResource DefaultBackgrounColor}"/>
    <SolidColorBrush x:Key="Button.Static.Foreground" Color="{DynamicResource DefaultForegrounColor}"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="{DynamicResource AccentColor}"/>
    <SolidColorBrush x:Key="Button.MouseOver.Foreground" Color="{DynamicResource DefaultBackgrounColor}"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="{DynamicResource AccentColor}"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="{DynamicResource ExAccentColor}"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="{DynamicResource ExAccentColor}"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

    <Style x:Key="IconButtonBase" TargetType="{x:Type controls:IconButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}"/>
        <Setter Property="HorizontalContentAlignment"  Value="Center"/>
        <Setter Property="VerticalContentAlignment"  Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="IconSize" Value="{DynamicResource DefalutIconSize}"/>
        <Setter Property="FontSize" Value="{DynamicResource DefalutFontSize}"/>
    </Style>

    <Style x:Key="{x:Type controls:IconButton}" TargetType="{x:Type controls:IconButton}" BasedOn="{StaticResource IconButtonBase}">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:IconButton}">
                    <Border Name="border" 
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="true">

                        <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center">


                            <Path x:Name="icon" DockPanel.Dock="Left"
                                    Width="{TemplateBinding IconSize}" Height="{TemplateBinding IconSize}"
                                      Data="{TemplateBinding IconData}" 
                                      Fill="{TemplateBinding Foreground}"
                                      Stretch="Uniform"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center">
                            </Path>

                            <ContentPresenter x:Name="contentPresenter" Margin="5 0 0 0" Visibility="Collapsed"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                        </DockPanel>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush"  TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            <Setter Property="Foreground" Value="{StaticResource Button.MouseOver.Foreground}"/>
                            <Setter Property="Fill" TargetName="icon" Value="{StaticResource Button.MouseOver.Foreground}"/>
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush"  TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="Visibility" TargetName="contentPresenter" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background"  Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush"  TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="Foreground"  Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalTextIconButton" TargetType="{x:Type controls:IconButton}" BasedOn="{StaticResource IconButtonBase}">
        <Setter Property="IconSize" Value="20"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:IconButton}">
                    <Border Name="border" 
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="true">
                        <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Path x:Name="icon" DockPanel.Dock="Top"
                                    Width="{TemplateBinding IconSize}" 
                                    Height="{TemplateBinding IconSize}"
                                      Data="{TemplateBinding IconData}" 
                                      Fill="{TemplateBinding Foreground}"
                                      Stretch="Uniform"  Margin="0 0 0 4"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center">
                            </Path>
                            <ContentPresenter x:Name="text" Visibility="Collapsed" DockPanel.Dock="Bottom"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush"  TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            <Setter Property="Foreground" Value="{StaticResource Button.MouseOver.Foreground}"/>
                            <Setter Property="Fill" TargetName="icon" Value="{StaticResource Button.MouseOver.Foreground}"/>
                            <Setter Property="TextBlock.Foreground" TargetName="text" Value="{StaticResource Button.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush"  TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="Visibility" TargetName="text" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background"  Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush"  TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="Foreground"  Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>